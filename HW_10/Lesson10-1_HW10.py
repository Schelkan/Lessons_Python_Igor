# Реалізуйте генераторну функцію (з використанням оператора yield), яка повертатиме по одному члену числової послідовності,
# закон якої задається за допомогою функції користувача.
# Крім цього параметром генераторної функції повинні бути значення першого члена прогресії та кількість членів,
# що видаються послідовності (n). Генератор повинен зупинити свою роботу з досягнення n-го члена.
#
# Підказка: це завдання дуже схоже на нескінченний лічильник з матеріалів лекції!
# Потрібно лише обмежити кількість видаваних генератором значень!

"""
 begin: перший елемент послідовності
 end: кількість елементів у послідовності
 func: функція, яка формує значення для послідовності
"""

def pow(x):
    return x ** 2

def some_gen(begin_num, end_num, func):

    for i in range(end_num):
        yield begin_num
        begin_num = func(begin_num)

# some_gen(2, 4, pow)
# qqq = some_gen(2, 4, pow)     # для перевірки
# print(list(qqq))


from inspect import isgenerator
#
gen = some_gen(2, 4, pow)
assert isgenerator(gen) == True, 'Test1'
assert list(gen) == [2, 4, 16, 256], 'Test2'
print('OK')